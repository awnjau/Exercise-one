*{
    box-sizing: border-box;
}

body 
 {
    box-sizing: border-box;
    font-family:sans-serif;
    font-size: 16px;
    margin: 0;
}

a {
    color: black;
}

h1{
    font-size:40px;
}

p{
    font-size: 20px;
}

header {
    background-color:lightblue;
    padding: 20px;
}

header nav {
    align-items: center;
    display:flex;
    flex-direction:row;
    justify-content: flex-end;
    margin: 0 auto;
    max-width:900px;
}

header nav a {
    color: black;
    font-size: 20px;
    font-weight: bold;
    text-decoration: none;
    margin: 0 10px;
}

header nav a:last-of-type{
    margin-right :0;

}
.section-wrapper{
    background-color:lightgreen;
    padding:25px;
}

.interior {
    background-color: lightskyblue;
    border: 10px solid green;
    margin: 40px;
    padding: 40px;
}
.flex-interior{
    display:flex;
    flex-wrap: wrap;
    gap: 40px;
    margin: 0 auto;
    max-width: 900px;
    padding: 40px 0;
}

.flex-parent{
    background-color: lightcoral;
   border: 10px solid brown;
   display: flex;
   flex-basis: 40%;
   flex-shrink: 0;
   gap:25px;
   padding:25px;
   width: 100%; 
}

.flex-parent:first-of-type {
    flex-basis: 100%;
    padding: 40px;
}

.flex-parent h1{
    color: brown;
}

.flex-parent-stacked{
    flex-direction: column;

}

.flex-child{
    background-color: beige;
    border: 2px solid orange;
    flex-basis: 33%;
    min-height:100px;

}

.flex-child-big{
    align-items: center;
    display: flex;
    flex-basis:100%;
    justify-content: center;
    margin: 0 auto;
    max-width: 800px 
}

.positioning-wrapper{
    background-color: lightyellow;
    padding: 40px 20px;
}

.positioning-interior{
background-color: darkgoldenrod;
border-color:aqua;
position:relative;
}

.circle{
background-color: lightyellow;
border:5px solid darkgoldenrod;
border-radius: 50%;
height: 80px; 
position: absolute;
width:80px;
}
.square{
background-color: lightyellow;
border:5px solid darkgoldenrod;
height: 80px; 
position: absolute; 
width:80px;
}

## Functions

function coolFunction () {
    if(typeof arg === 'string') return 'string';
    return 'not string';
}

const thisval= coolFunction ('hi');

const coolArrowFunction = () => 'hello';


()=> {

}

## Objects
const annoyingObject = {
    top:[
        {
            middle:{
                bottom:{
                    thing:'frogs'
                }
            }
        }
    ]

}

annoyingObject.top[0].middle.bottom.thing //'frogs'